{
	"name": "dataflow Pipeline",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "dataset1",
					"description": "Add source dataset"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText5",
						"type": "DatasetReference"
					},
					"name": "dataset2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Dataset3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empID as string,",
				"          name as string,",
				"          country as string,",
				"          deptID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dataset1",
				"source(output(",
				"          deptID as string,",
				"          deptName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dataset2",
				"dataset1, dataset2 join(dataset1@deptID == dataset2@deptID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(country = upper(country)) ~> ModifyColumns1",
				"ModifyColumns1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['output.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empID,",
				"          name,",
				"          country,",
				"          deptID = dataset1@deptID,",
				"          deptName",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}